[{"D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\index.tsx":"1","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\App.tsx":"2","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Header\\index.tsx":"3","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Calculator\\index.tsx":"4","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Table\\index.tsx":"5"},{"size":220,"mtime":1610872031205,"results":"6","hashOfConfig":"7"},{"size":1306,"mtime":1610955340438,"results":"8","hashOfConfig":"7"},{"size":1998,"mtime":1610952884801,"results":"9","hashOfConfig":"7"},{"size":4655,"mtime":1610961194157,"results":"10","hashOfConfig":"7"},{"size":2004,"mtime":1610960280967,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xq1ibf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\index.tsx",[],["25","26"],"D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\App.tsx",["27","28","29","30"],"import React from 'react';\n\nimport Header from './components/Header';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, TextField } from '@material-ui/core';\nimport Calculator from './components/Calculator';\nimport CurrenciesList from './components/Table';\n\nconst useStyles = makeStyles(theme => ({\n  mainAppArea: {\n    marginTop: '2rem',\n    height: '40vh',\n  },\n  table: {},\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth='md'>\n      <CssBaseline />\n      <Grid container direction='column'>\n        <Grid item md={12}>\n          <Header />\n        </Grid>\n        <Grid\n          item\n          container\n          spacing={3}\n          justify='space-between'\n          className={classes.mainAppArea}>\n          <Grid item md={7} lg={7}>\n            <CurrenciesList />\n            {/* <Paper elevation={2} className={classes.table}>\n              Table of Currencies\n            </Paper> */}\n          </Grid>\n          <Calculator />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Header\\index.tsx",["31","32","33","34"],"import React, { useEffect } from 'react';\r\nimport lottie from 'lottie-web';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport RobotLogoAnimation from './Chatbot Colour Animation.json';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  header: {\r\n    background:\r\n      'linear-gradient(115deg, #FF9797 0%, #0F0068 100%), linear-gradient(245deg, #A8FFE5 0%, #0500FF 100%), radial-gradient(100% 225% at 100% 0%, #FF003D 0%, #000000 100%), radial-gradient(90% 160% at 0% 100%, #E42C64 0%, #E42C64 30%, #614AD3 calc(30% + 1px), #614AD3 60%, #2D248A calc(60% + 1px), #2D248A 70%, #121B74 calc(70% + 1px), #121B74 100%), linear-gradient(100deg, #48466F 9%, #48466D 35%, #3D84A8 calc(35% + 1px), #3D84A8 65%, #46CDCF calc(65% + 1px), #46CDCF 70%, #ABEDD8 calc(70% + 1px), #ABEDD8 100%)',\r\n    backgroundBlendMode: 'overlay, overlay, overlay, overlay, normal',\r\n  },\r\n  mainLogo: {\r\n    maxWidth: 140,\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  let animaRef = React.createRef<HTMLDivElement>();\r\n  useEffect(() => {\r\n    if (animaRef.current) {\r\n      lottie.loadAnimation({\r\n        container: animaRef.current,\r\n        renderer: 'svg',\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: RobotLogoAnimation,\r\n      });\r\n    }\r\n  }, [animaRef.current]);\r\n  return (\r\n    <AppBar position='static'>\r\n      <Toolbar variant='dense' className={classes.header}>\r\n        <IconButton\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='menu'\r\n          className={classes.mainLogo}>\r\n          <div ref={animaRef}></div>\r\n        </IconButton>\r\n        <h4>CryptoLIDAR</h4>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Calculator\\index.tsx",["35"],"D:\\Courses Projects In Work\\Portfolio\\cryptolidar\\src\\components\\Table\\index.tsx",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":18},{"ruleId":"41","severity":1,"message":"45","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":13},{"ruleId":"41","severity":1,"message":"46","line":10,"column":15,"nodeType":"43","messageId":"44","endLine":10,"endColumn":20},{"ruleId":"41","severity":1,"message":"47","line":10,"column":22,"nodeType":"43","messageId":"44","endLine":10,"endColumn":31},{"ruleId":"41","severity":1,"message":"42","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":18},{"ruleId":"41","severity":1,"message":"45","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":11},{"ruleId":"41","severity":1,"message":"48","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":22},{"ruleId":"49","severity":1,"message":"50","line":36,"column":6,"nodeType":"51","endLine":36,"endColumn":24,"suggestions":"52"},{"ruleId":"41","severity":1,"message":"53","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":14},{"ruleId":"41","severity":1,"message":"54","line":7,"column":19,"nodeType":"43","messageId":"44","endLine":7,"endColumn":29},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'createStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'animaRef'. Either include it or remove the dependency array. Mutable values like 'animaRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["57"],"'Select' is defined but never used.","'setColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [animaRef]",{"range":"60","text":"61"},[1570,1588],"[animaRef]"]